version: '2'
volumes:
  camhd-minio:
    driver_opts:
      export: /mnt/zvol1/projects/camhd/${ENVIRONMENT}/minio
      host: nas.san.apl.washington.edu
    driver: rancher-nfs
  camhd-dot-minio:
    driver_opts:
      export: /mnt/zvol1/projects/camhd/${ENVIRONMENT}/dot-minio
      host: nas.san.apl.washington.edu
    driver: rancher-nfs

secrets:
  camhd-minio-secret-key:
    external: 'true'

services:

  lazycache:
    image: amarburg/go-lazycache:latest
    environment:
      LAZYCACHE_ALLOW_RAW_OUTPUT: 'true'
    labels:
      io.rancher.scheduler.affinity:host_label: labor=true
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'

  camhd-worker:
    image: amarburg/camhd-worker:${ENVIRONMENT}
    labels:
      io.rancher.scheduler.affinity:host_label: labor=true
      io.rancher.container.pull_image: always
      io.rancher.scheduler.global: 'true'

  minio:
    image: minio/minio:latest
    stdin_open: true
    volumes:
    - camhd-minio:/data
    - camhd-dot-minio:/root/.minio
    environment:
      MINIO_ACCESS_KEY: 'camhd'
      MINIO_SECRET_KEY_FILE: '/run/secrets/camhd-minio-secret-key'
    tty: true
    command: ["server", "/data"]
    labels:
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:host_label_soft: in314=true

  rabbitmq:
    image: bitnami/rabbitmq:latest
    labels:
      io.rancher.container.pull_image: always

  camhd-injector:
    image: amarburg/camhd-worker:${ENVIRONMENT}
    environment:
      OUTPUT_DIR: s3://minio:9000/camhd-motion-metadata/
    stdin_open: true
    entrypoint: "python3"
    tty: true
    command: ["/code/camhd-motion-analysis/python/apps/recent_injector.py", "--days", "30", "--log", "INFO", "--threads", "16"]
    labels:
      io.rancher.container.start_once: 'true'
      io.rancher.container.pull_image: always
      cron.schedule: 0 0 1 * * ?

  flower:
    image: amarburg/camhd-worker:${ENVIRONMENT}
    environment:
      CELERY_BROKER: amqp://user:bitnami@rabbitmq/
    stdin_open: true
    command: ["make", "flower"]
    tty: true
    labels:
      io.rancher.container.pull_image: always

  flower-lb:
    image: rancher/lb-service-haproxy:v0.9.1
    ports:
    - 5556:5556/tcp
    labels:
      io.rancher.scheduler.affinity:host_label: public_services=true
      io.rancher.container.agent.role: environmentAdmin,agent
      io.rancher.container.agent_service.drain_provider: 'true'
      io.rancher.container.create_agent: 'true'
